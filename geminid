#!/bin/bash
### response code then mime-type
uri=$(head -n1 | tr -d '\r\n')
path="$(printf "%s\n" "$uri" | uricut -p)"
export QUERY_STRING="$(printf "%s\n" "$uri" | uricut -q)"
if grep '^/~' <<< $path 2>&1 >/dev/null ;then
  user="$(printf "%s\n" "$path" | cut -d/ -f2 | tr -cd 'a-zA-Z')"
  path="$(printf "%s\n" "$path" | cut -d/ -f3-)"
  path="$(normalpath "/home/$user/public_gemini/$path")"
  if ! printf "%s\n" "$path" | grep '^/home/'"$user"'/public_gemini/' >/dev/null 2>&1;then
    printf '59 BAD REQUEST\r\n'
    exit 1
  fi
else
  unset user
  path="$(normalpath "/var/gemini/$path")"
  if ! printf "%s\n" "$path" | grep "^/var/gemini" >/dev/null 2>&1;then
    printf '59 BAD REQUEST\r\n'
    exit 1
  fi
fi
CONTENT_TYPE="$(mime-type "$path")"
case "$CONTENT_TYPE" in
  inode/directory)
    printf "20 text/gemini\r\n"
    printf '> using gemini t. you\r\n'
    printf "%s\n" "$uri" | uricut
    if [ -f "$path/index.gmi" ];then
      cat "$path/index.gmi"
    fi
    printf "## autogenerated list of stuff in this directory.\r\n"
    if [ "$user" ];then
      find "$path" -type d | cut -d/ -f5- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [dir]\r\n'
      find "$path" -type f | cut -d/ -f5- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [file]\r\n'
      find "$path" -type l | cut -d/ -f5- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [link]\r\n'
    else
      find "$path" -type d | cut -d/ -f4- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [dir]\r\n'
      find "$path" -type f | cut -d/ -f4- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [file]\r\n'
      find "$path" -type l | cut -d/ -f4- | grep . | tr '\n' '\0' | xargs -r0 printf '=> %s [link]\r\n'
    fi
    ;;
  *)
    if [ -x "$path" ];then
      if [ "$user" ];then
        printf "47 CGIs for users not implemented yet\r\n"
      else
        "$path"
      fi
    else
      printf "20 %s\r\n" "$CONTENT_TYPE"
      cat -- "$path"
    fi
    ;;
esac
